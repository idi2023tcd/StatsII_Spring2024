exp(cbind(OR = coef(ord.log), ci))
# b) fit a multinomial logit model
# set a reference level for the outcome
workingMoms$attitude <- relevel(workingMoms$attitude, ref = "Strongly Disagree")
workingMoms$attitude
# run model
mult.log <- multinom(attitude ~ ., data = workingMoms)
summary(mult.log)
exp(coef(mult.log))
# get p values
z <- summary(mult.log)$coefficients/summary(mult.log)$standard.errors
z
(p <- (1 - pnorm(abs(z), 0, 1)) * 2)
# we can use predicted probabilities to help our interpretation
pp <- data.frame(fitted(mult.log))
head(data.frame(attitude = workingMoms$attitude,
SD = pp$Strongly.Disagree,
D = pp$Disagree,
A = pp$Agree,
SA = pp$Strongly.Agree))
pp
head(data.frame(attitude = workingMoms$attitude,
SD = pp$Strongly.Disagree,
D = pp$Disagree,
A = pp$Agree,
SA = pp$Strongly.Agree))
# c) Consider gender as an interaction
mult.log.int <- multinom(attitude ~ gender * ., data = workingMoms)
summary(mult.log.int)
z.int <- summary(mult.log.int)$coefficients/summary(mult.log.int)$standard.errors
(p.int <- (1 - pnorm(abs(z.int), 0, 1)) * 2)
pp.int <- data.frame(fitted(mult.log))
head(data.frame(attitude = workingMoms$attitude,
SD = pp.int$Strongly.Disagree,
D = pp.int$Disagree,
A = pp.int$Agree,
SA = pp.int$Strongly.Agree))
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
#
install.packages(c("nnet", "MASS", "mlogit"))
library("nnet")
library("MASS")
library("mlogit") # mlogit package is used to perform Multinomial Logistic Regression Model
lapply(c("nnet", "MASS", "mlogit"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
### Answer of Problem 1/Question 1
# load data
#gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv", stringsAsFactors = F)
##
gdp_data <- read.csv("C:/NewGithubFolder/StatsII_Spring2024/datasets/gdpChange.csv", stringsAsFactors = F)# To Load dataset into R
head(gdp_data) # This line of the code provide the first 6 observations in the dataset
dim(gdp_data) # Rows/Observations=3721; Columns/Variables=12
names(gdp_data)# "X" ;"COUNTRY"; "CTYNAME"; "YEAR"; "GDPW"; "OIL"; "REG" ;"EDT";"GDPWlag";"GDPWdiff";"GDPWdifflag" ;"GDPWdifflag2"
str(gdp_data) # # Check the structure of the dataset
gdp_data$GDPWdiff <- relevel(gdp_data$GDPWdiff, ref="no change")
multinom_model_unordered <- multinom(GDPWdiff ~ REG + OIL, data = gdp_data)
summary(multinom_model_unordered) # This line of the code will Summarize the model output
#####################
# Problem 1
#####################
### Answer of Problem 1/Question 1
# load data
#gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv", stringsAsFactors = F)
##
gdp_data <- read.csv("C:/NewGithubFolder/StatsII_Spring2024/datasets/gdpChange.csv", stringsAsFactors = F)# To Load dataset into R
gdp_data
########## 1st method:
# Check the levels of GDPWdiff
levels(gdp_data$GDPWdiff)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
# Run multinomial logistic regression with the corrected data
multinom_model_unordered <- multinom(GDPWdiff_category ~ REG + OIL, data = gdp_data)
# Summary of the model
summary(multinom_model_unordered)
################################################################
# 2nd method:
multinom_model_unordered <- multinom(GDPWdiff ~ REG + OIL, data = gdp_data)
summary(multinom_model_unordered) # This line of the code will Summarize the model output
#####################
table(gdp_data$GDPWdiff)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
table(gdp_data$GDPWdiff_category)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
gdp_data
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels(gdp_data$GDPWdiff_category),
labels = c("negative", "no change", "positive"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels(gdp_data$GDPWdiff_category),
labels = c("negative", "no change", "positive"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels=c("negative", "no change", "positive"),
labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
####################################
## Transform the REG (Regime) from binary (0;1) into the Categorical 0=Non-Democracy; 1=Democracy
# 1st Method:
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
table(gdp_data$GDPWdiff_category)
gdp_data
#### Answer/Output
#Non-Democracy     Democracy
#   2227             1494
########
#Transform the variable OIL from binary to Categorical Variable:
gdp_data$OIL <- ifelse(gdp_data$OIL ==1, "Exceed 50%", "Not Exceed 50%")
table(gdp_data$OIL)
#####################
# NOTE: Before I start answering/Solving the Question 1 of the Problem Set III parts (1) and (2) I need to do/perform some data
# WRANGLING:
##
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels=c("negative", "no change", "positive"),
labels = c("negative", "no change", "positive")) # Here I have created new variable
#GDPWdiff_category from the Original GDPWdiff and apply the cut() function and breaks=3 that will match the 3 categories, levels
# and labels  (i.e., "negative", "no change", "positive")
table(gdp_data$GDPWdiff_category) # To build the table/contingence table that will show values for each categories
gdp_data
#GDPWdiff_category from the Original GDPWdiff and apply the cut() function and breaks=3 that will match the 3 categories, levels
# and labels  (i.e., "negative", "no change", "positive")
table(gdp_data$GDPWdiff_category) # To build the table/contingence table that will show values for each categories
##### Answer/Output
# negative  no change  positive
#     5      3701        15
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
####################################
## Transform the REG (Regime) from binary (0;1) into the Categorical 0=Non-Democracy; 1=Democracy
# 1st Method:
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
####################################
## Transform the REG (Regime) from binary (0;1) into the Categorical 0=Non-Democracy; 1=Democracy
# 1st Method:
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
#####################
# Problem 1
#####################
### Answer of Problem 1/Question 1
# load data
#gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv", stringsAsFactors = F)
##
gdp_data <- read.csv("C:/NewGithubFolder/StatsII_Spring2024/datasets/gdpChange.csv", stringsAsFactors = F)# To Load dataset into R
#####################
table(gdp_data$GDPWdiff)
########## 1st method:
# Check the levels of GDPWdiff
levels(gdp_data$GDPWdiff)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
##
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels=c("negative", "no change", "positive"),
labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
##### Answer/Output
# negative  no change  positive
#     5      3701        15
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
table(gdp_data$REG)
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
####################################
## Transform the REG (Regime) from binary (0;1) into the Categorical 0=Non-Democracy; 1=Democracy
# 1st Method:
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels=c("negative", "no change", "positive"),
labels = c("negative", "no change", "positive")) # Here I have created new variable
#GDPWdiff_category from the Original GDPWdiff and apply the cut() function and breaks=3 that will match the 3 categories, levels
# and labels  (i.e., "negative", "no change", "positive")
table(gdp_data$GDPWdiff_category)
##### Answer/Output
# negative  no change  positive
#     5      3701        15
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
#####################
# Problem 1
#####################
### Answer of Problem 1/Question 1
# load data
#gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv", stringsAsFactors = F)
##
gdp_data <- read.csv("C:/NewGithubFolder/StatsII_Spring2024/datasets/gdpChange.csv", stringsAsFactors = F)# To Load dataset into R
head(gdp_data) # This line of the code provide the first 6 observations in the dataset
dim(gdp_data) # Rows/Observations=3721; Columns/Variables=12
names(gdp_data)# "X" ;"COUNTRY"; "CTYNAME"; "YEAR"; "GDPW"; "OIL"; "REG" ;"EDT";"GDPWlag";"GDPWdiff";"GDPWdifflag" ;"GDPWdifflag2"
str(gdp_data) # # Check the structure of the dataset
#####################
table(gdp_data$GDPWdiff)
########## 1st method:
# Check the levels of GDPWdiff
levels(gdp_data$GDPWdiff)
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels=c("negative", "no change", "positive"),
labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
##### Answer/Output
# negative  no change  positive
#     5      3701        15
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
gdp_data$OIL <- ifelse(gdp_data$OIL ==1, "Exceed 50%", "Not Exceed 50%")
table(gdp_data$OIL)
######
#Exceed 50%    Not Exceed 50%
# 374            347
#####
ftable(xtabs(~REG + GDPWdiff_category + OIL, data=gdp_data))
#Democracy
#             negative              1               1
#             no change            82             1403
#             positive              3               4
####################
#################################
# Question 1: Part 1. Fitting a unordered multinomial logit with as the output and setting a reference category "no change"
gdp_data$GDPWdiff_category < relevel(gdp_data$GDPWdiff_category, ref="no change")
##
# Run the Model:
multinom_model_unordered <- multinom(GDPWdiff_category ~ REG + OIL, data = gdp_data)
# Summary of the model
summary(multinom_model_unordered)
#Democracy
#             negative              1               1
#             no change            82             1403
#             positive              3               4
####################
#################################
# Question 1: Part 1. Fitting a unordered multinomial logit with as the output and setting a reference category "no change"
#gdp_data$GDPWdiff_category < relevel(gdp_data$GDPWdiff_category, ref="no change")
##
# Run the Model:
multinom_model_unordered <- multinom(GDPWdiff_category ~ REG + OIL, data = gdp_data, ref="no change")
# Summary of the model
summary(multinom_model_unordered)
#Residual Deviance: 232.7959
#AIC: 244.7959 # Observations: Write a report in overleaf to interpret the output/estimated variables
################################################################
exp(coef(multinom_model_unordered)) # Convert the coefficients to odds ratio
# Answer/Output:
#             (Intercept) REGDemocracy   OILNot Exceed 50%
#no change    108.4923    0.5264835         42.439582
#positive       2.1752    1.0964128          2.613523
#####
# Calculate the p-values:
z <- summary(multinom_model_unordered)$coefficients/summary(multinom_model_unordered)$standard.errors
(p <- pnorm(abs(z), 0, 1)*2)
ggplot(workingMoms, aes(x=attitude, y=prestige, fill=attitude)) +
geom_boxplot() +
stat_boxplot(geom="errorbar", width=0.5)+
geom_point()+
geom_jitter(alpha = 0.3) +
scale_x_discrete(labels=function(x){sub("\\s", "\n", x)}) +
theme(axis.text.x = element_text(angle = 45)) +
theme_bw()+
facet_grid(gender ~ year)
##############
# Tutorial 5 Ordered and Multinomial Logistic Regression #
##############
###################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
lapply(c(),  pkgTest)
###########
library(MASS)
library(nnet)
library(ggplot2)
workingMoms <- read.table("http://statmath.wu.ac.at/courses/StatsWithR/WorkingMoms.txt", header=T)
head(workingMoms)
dim(workingMoms)# Rows/Columns=2293; Columns/Variables=7
names(workingMoms) # "age";   "education";  "prestige";   "gender";    "year"  ;    "race" ;     "attitude"
#########
# EDA
summary(workingMoms)
ftable(xtabs(~ gender + year + attitude, data = workingMoms))
# do some wrangling
workingMoms$attitude <- factor(workingMoms$attitude,
levels = c("SD", "D", "A", "SA"),
labels = c("Strongly Disagree",
"Disagree",
"Agree",
"Strongly Agree"))
workingMoms$gender <- as.factor(workingMoms$gender)
workingMoms$race <- factor(workingMoms$race,
levels = c(0,1),
labels = c("Non-white", "White"))
workingMoms$year <- factor(workingMoms$year,
levels = c("Year1977", "Year1989"),
labels = c("1977", "1989"))
ftable(xtabs(~ gender + year + attitude, data = workingMoms))
ggplot(workingMoms, aes(x=attitude, y=prestige, fill=attitude)) +
geom_boxplot() +
stat_boxplot(geom="errorbar", width=0.5)+
geom_point()+
geom_jitter(alpha = 0.3) +
scale_x_discrete(labels=function(x){sub("\\s", "\n", x)}) +
theme(axis.text.x = element_text(angle = 45)) +
theme_bw()+
facet_grid(gender ~ year)
ord.log <- polr(attitude ~ ., data = workingMoms, Hess = TRUE)
summary(ord.log)
# Calculate a p value
ctable <- coef(summary(ord.log))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
# Calculate confidence intervals
(ci <- confint(ord.log))
# convert to odds ratio
exp(cbind(OR = coef(ord.log), ci))
# b) fit a multinomial logit model
# set a reference level for the outcome
workingMoms$attitude <- relevel(workingMoms$attitude, ref = "Strongly Disagree")
# run model
mult.log <- multinom(attitude ~ ., data = workingMoms)
summary(mult.log)
exp(coef(mult.log))
# Answer/Output:
#             (Intercept) REGDemocracy   OILNot Exceed 50%
#no change    108.4923    0.5264835         42.439582
#positive       2.1752    1.0964128          2.613523
#####
# Calculate the p-values:
z <- summary(multinom_model_unordered)$coefficients/summary(multinom_model_unordered)$standard.errors
#Residual Deviance: 232.7959
#AIC: 244.7959 # Observations: Write a report in overleaf to interpret the output/estimated variables
################################################################
exp(coef(multinom_model_unordered)) # Convert the coefficients to odds ratio
#Democracy
#             negative              1               1
#             no change            82             1403
#             positive              3               4
####################
#################################
# Question 1: Part 1. Fitting a unordered multinomial logit with as the output and setting a reference category "no change"
#gdp_data$GDPWdiff_category < relevel(gdp_data$GDPWdiff_category, ref="no change")
##
# Run the Model:
multinom_model_unordered <- multinom(GDPWdiff_category ~ REG + OIL, data = gdp_data, ref="no change")
#####################
# Problem 1
#####################
### Answer of Problem 1/Question 1
# load data
#gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv", stringsAsFactors = F)
##
gdp_data <- read.csv("C:/NewGithubFolder/StatsII_Spring2024/datasets/gdpChange.csv", stringsAsFactors = F)# To Load dataset into R
head(gdp_data) # This line of the code provide the first 6 observations in the dataset
dim(gdp_data) # Rows/Observations=3721; Columns/Variables=12
names(gdp_data)# "X" ;"COUNTRY"; "CTYNAME"; "YEAR"; "GDPW"; "OIL"; "REG" ;"EDT";"GDPWlag";"GDPWdiff";"GDPWdifflag" ;"GDPWdifflag2"
#####################
table(gdp_data$GDPWdiff)
# Recode GDPWdiff into fewer categories if necessary
# For example, if GDPWdiff is a numeric variable, you can create categorical bins
#gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, labels = c("Low", "Medium", "High"))
##
gdp_data$GDPWdiff_category <- cut(gdp_data$GDPWdiff, breaks = 3, levels=c("negative", "no change", "positive"),
labels = c("negative", "no change", "positive"))
table(gdp_data$GDPWdiff_category)
##### Answer/Output
# negative  no change  positive
#     5      3701        15
# Check the levels of the new variable
levels(gdp_data$GDPWdiff_category)
####################################
## Transform the REG (Regime) from binary (0;1) into the Categorical 0=Non-Democracy; 1=Democracy
# 1st Method:
gdp_data$REG <- factor(gdp_data$REG, levels=c(0, 1), labels=c("Non-Democracy", "Democracy"))
table(gdp_data$REG)
#### Answer/Output
#Non-Democracy     Democracy
#   2227             1494
########
#Transform the variable OIL from binary to Categorical Variable:
gdp_data$OIL <- ifelse(gdp_data$OIL ==1, "Exceed 50%", "Not Exceed 50%")
table(gdp_data$OIL)
######
#Exceed 50%    Not Exceed 50%
# 374            347
#####
ftable(xtabs(~REG + GDPWdiff_category + OIL, data=gdp_data))
# Summary of the model
summary(multinom_model_unordered)
# Summary of the model
summary(multinom_model_unordered)
#Democracy
#             negative              1               1
#             no change            82             1403
#             positive              3               4
####################
#################################
# Question 1: Part 1. Fitting a unordered multinomial logit with as the output and setting a reference category "no change"
gdp_data$GDPWdiff_category < relevel(gdp_data$GDPWdiff_category, ref="no change")
##
# Run the Model:
multinom_model_unordered <- multinom(GDPWdiff_category ~ REG + OIL, data = gdp_data, ref="no change")
# Summary of the model
summary(multinom_model_unordered)
#Residual Deviance: 232.7959
#AIC: 244.7959 # Observations: Write a report in overleaf to interpret the output/estimated variables
################################################################
exp(coef(multinom_model_unordered)) # Convert the coefficients to odds ratio
# Answer/Output:
#             (Intercept) REGDemocracy   OILNot Exceed 50%
#no change    108.4923    0.5264835         42.439582
#positive       2.1752    1.0964128          2.613523
#####
# Calculate the p-values:
z <- summary(multinom_model_unordered)$coefficients/summary(multinom_model_unordered)$standard.errors
(p <- (1 - pnorm(abs(z), 0, 1))*2)
gdp_data
## Answer:
#            (Intercept) REGDemocracy  OILNot Exceed 50%
#no change 6.661338e-15    0.4920533       0.001003355
#positive  2.764971e-01    0.9314315       0.445506366
############
#I can use predicted probabilities to help me interpret my output/variables estimated
pp <- data.frame(fitted(multinom_model_unordered))
head(data.frame(GDPWdiff_category=get_data$GDPWdiff_category,
negative=pp$negative,
nochange=pp$no.change,
positive=pp$positive))
## Answer:
#            (Intercept) REGDemocracy  OILNot Exceed 50%
#no change 6.661338e-15    0.4920533       0.001003355
#positive  2.764971e-01    0.9314315       0.445506366
############
#I can use predicted probabilities to help me interpret my output/variables estimated
pp <- data.frame(fitted(multinom_model_unordered))
head(data.frame(GDPWdiff_category=gdp_data$GDPWdiff_category,
negative=pp$negative,
nochange=pp$no.change,
positive=pp$positive))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(psych) # for PCA
library(FactoMineR) # for CA and MCA
